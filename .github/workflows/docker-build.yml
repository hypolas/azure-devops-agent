name: Build and Push Docker Images

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: hypolas/azure-devops-agent

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Get Azure DevOps Agent Version
      id: agent-version
      run: |
        # Construire le stage temporaire pour extraire la version (Linux uniquement)
        docker build --target temp-version --platform linux/amd64 -t temp-version .
        AGENT_VERSION=$(docker run --rm temp-version cat /tmp/agent_version.txt)
        echo "agent-version=$AGENT_VERSION" >> $GITHUB_OUTPUT
        echo "Azure DevOps Agent Version: $AGENT_VERSION"
        
    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix=sha-
          type=raw,value=${{ steps.agent-version.outputs.agent-version }}
          type=raw,value=agent-${{ steps.agent-version.outputs.agent-version }}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          INSTALL_AWS_SSM=true
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      if: github.event_name == 'pull_request'
      run: |
        docker run --rm \
          -e AZP_URL="https://dev.azure.com/test" \
          -e AZP_TOKEN="test-token" \
          -e AZP_POOL="test-pool" \
          -e AZP_AGENT_NAME="test-agent" \
          -e AGENT_NUMBER="1" \
          --entrypoint="" \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }} \
          bash -c "echo 'Docker image test successful' && aws-ssm --version || echo 'aws-ssm not found but image built successfully'"

    - name: Generate build summary
      run: |
        echo "## 🐳 Docker Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Property | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| Image | \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| Tags | \`${{ steps.meta.outputs.tags }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| Azure DevOps Agent | \`${{ steps.agent-version.outputs.agent-version }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| Platforms | linux/amd64, linux/arm64, linux/arm/v7 |" >> $GITHUB_STEP_SUMMARY
        echo "| AWS SSM | ✅ Enabled |" >> $GITHUB_STEP_SUMMARY
        echo "| Registry | Docker Hub (docker.io) |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Usage" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "# Latest image" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Specific agent version" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.agent-version.outputs.agent-version }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY